syntax = "proto3";

package minotor.timetable;

message Route {
  /**
   * Arrivals and departures encoded as a 16 bit uint array.
   * Format: [arrival1, departure1, arrival2, departure2, etc.]
   */
  bytes stopTimes = 1;
  /**
   * PickUp and DropOff types represented as an 8 bit uint array.
   * Values:
   *   0: REGULAR
   *   1: NOT_AVAILABLE
   *   2: MUST_PHONE_AGENCY
   *   3: MUST_COORDINATE_WITH_DRIVER
   * Format: [drop_off_1][pickup_1][drop_off_0][pickup_0]
   * 2 bits per value
   */
  bytes pickUpDropOffTypes = 2;
  /**
   * Stops encoded as a 32 bit uint array.
   * Format: [stop1, stop2, stop3, etc.]
   */
  bytes stops = 3;
  uint32 serviceRouteId = 4;
}

enum TransferType {
  RECOMMENDED_TRANSFER_POINT = 0;
  TIMED_TRANSFER = 1;
  REQUIRES_MINIMAL_TIME = 2;
  IN_SEAT_TRANSFER = 3;
}

message Transfer {
  uint32 destination = 1;
  TransferType type = 2;
  optional uint32 minTransferTime = 3;
}

message StopAdjacency {
  repeated Transfer transfers = 1;
  repeated int32 routes = 2;
}

enum RouteType {
  TRAM = 0;
  SUBWAY = 1;
  RAIL = 2;
  BUS = 3;
  FERRY = 4;
  CABLE_TRAM = 5;
  AERIAL_LIFT = 6;
  FUNICULAR = 7;
  TROLLEYBUS = 8;
  MONORAIL = 9;
}

message ServiceRoute {
  RouteType type = 1;
  string name = 2;
  repeated int32 routes = 3;
}

message Timetable {
  string version = 1;
  repeated StopAdjacency stopsAdjacency = 2;
  repeated Route routesAdjacency = 3;
  repeated ServiceRoute serviceRoutes = 4;
}
